'//******************************************************************************
'// Laird Technologies (c) 2013
'//
'// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'// ######                                                                #######
'// ######        Library File meant to be #included in files             #######
'// ######                                                                #######
'// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'//
'// This library contains contains a standard advert manager and should be
'// #included in your app
'//
'//   Usage: (also see sample hrs.heart.rate.sb for more details)
'//
'//     (*) Call SendPassKey(...) from your code
'//
'//
'//******************************************************************************

'//******************************************************************************
'// Definitions
'//******************************************************************************

'//******************************************************************************
'// Library Import
'//******************************************************************************

'//******************************************************************************
'// Global Variable Declarations
'//******************************************************************************

'//******************************************************************************
'// Initialise Global Variable
'//******************************************************************************

'//******************************************************************************
'// Function and Subroutine definitions
'//******************************************************************************

'//==============================================================================
'//==============================================================================
function SecSendPassKey(hc as integer, byval ky as integer) as integer
  dim rc
  if hc != BLE_CONN_HANDLE_INVALID then
    rc = BleSecMngrPassKey(hc,ky)
    AssertResCode(rc,4010)
  endif
endfunc rc

'//==============================================================================
'//==============================================================================
function SecSetIoCap(ioCap as integer) as integer
  dim rc
  rc = BleSecMngrIocap(iocap)
  AssertResCode(rc,4020)
endfunc rc

'//==============================================================================
'//==============================================================================
function SecSetLtkSizeRange(mnLtk as integer, mxLtk as integer) as integer
  dim rc
  rc = BleSecMngrKeySizes(mnLtk,mxLtk)
  AssertResCode(rc,4030)
endfunc rc

'//==============================================================================
'//==============================================================================
sub InitSecurityMngr(ioCap as integer,mnLtk as integer, mxLtk as integer)
  dim rc
  rc = SecSetIoCap(ioCap)
  rc = SecSetLtkSizeRange(mnLtk,mxLtk)
endsub

'//******************************************************************************
'// Handler definitions
'//******************************************************************************

'//******************************************************************************
'// Other initialisations
'//******************************************************************************



