//Example :: EvAuthSccd.sb (See in BL600CodeSnippets.zip)

DIM hMyChar,rc,at$,conHndl


//==============================================================================
// Initialise and instantiate service, characteristic, start adverts
//==============================================================================
FUNCTION OnStartup()
    DIM rc, hSvc, at$, attr$, adRpt$, addr$, scRpt$ , rc2  
    attr$="Hi"
    DIM charMet : charMet = BleAttrMetaData(1,1,20,0,rc)
    
    //Commit svc with handle 'hSvcUuid'
    rc=BleServiceNew(1,BleHandleUuid16(0x18EE),hSvc)            
    //initialise char, read enabled, accept signed writes, broadcast capable
    rc=BleCharNew(0x4B,BleHandleUuid16(1),charMet,0,BleAttrMetadata(1,1,2,8,rc2))     
    //commit char initialised above, with initial value "hi" to service 'hMyChar'
    rc=BleCharCommit(hSvc,attr$,hMyChar)
    //Commit svc
    rc=BleServiceCommit(hSvc)            
    
    rc=BleAdvRptInit(adRpt$,0x02,0,20) 
    //Add 'hSvc' and 'hMyChar' to the advert report
    rc=BleAdvRptAddUuid16(adRpt$,hSvc,hMyChar,-1,-1,-1,-1)
    //commit reports to GATT table - adRpt$ is empty
    rc=BleAdvRptsCommit(adRpt$,scRpt$)
    rc=BleAdvertStart(0,addr$,20,300000,0)
    rc=GpioBindEvent(1,16,1)     //Channel 1, bind to low transition on GPIO pin 16
ENDFUNC rc


//==============================================================================
// Close connections so that we can run another app without problems
//==============================================================================
SUB CloseConnections()
    rc=BleDisconnect(conHndl)
    rc=BleAdvertStop()
    rc=GpioUnbindEvent(1)
ENDSUB

//==============================================================================
// Ble event handler
//==============================================================================
FUNCTION HndlrBleMsg(BYVAL nMsgId, BYVAL nCtx) 
    conHndl=nCtx
    IF nMsgID==1 THEN
        PRINT "\n\n--- Disconnected from client"
        EXITFUNC 0
    ELSEIF nMsgID==0 THEN
        PRINT "\n--- Connected to client"
    ENDIF
ENDFUNC 1


//==============================================================================
//handler to service button 0 pressed
//==============================================================================
FUNCTION HndlrBtn0Pr() AS INTEGER
    CloseConnections()
ENDFUNC 1


//==============================================================================
// CCCD descriptor written handler
//==============================================================================
FUNCTION HndlrAuthSccd(BYVAL connHandle,BYVAL charHandle, BYVAL readWrite) AS INTEGER
    DIM value$
    IF charHandle==hMyChar THEN
        IF nVal & 0x01 THEN
            PRINT "\nBroadcasts have been enabled by client"  
        ELSE
            PRINT "\nBroadcasts have been disabled by client"
        ENDIF
    ELSE
        PRINT "\nThis is for some other characteristic"
    ENDIF
ENDFUNC 1


ONEVENT  EVBLEMSG    CALL HndlrBleMsg
ONEVENT  EVCHARSCCD  CALL HndlrCharSccd
ONEVENT  EVGPIOCHAN1 CALL HndlrBtn0Pr 


IF OnStartup()==0 THEN
    rc = BleCharValueRead(hMyChar,at$)
    PRINT "\nCharacteristic Value: ";at$
    PRINT "\nYou can write to the SCCD attribute."
    PRINT "\nThe BL600 will then indicate a new characteristic value"
    PRINT "\n--- Press button 0 to exit\n"
ELSE
    PRINT "\nFailure OnStartup"
ENDIF


WAITEVENT

PRINT "\nExiting..."
